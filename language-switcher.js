// Language Switcher functionality
document.addEventListener('DOMContentLoaded', function() {
    function initLanguageSwitcher() {
        const languageToggle = document.getElementById('languageToggle');
        const languageDropdown = document.getElementById('languageDropdown');
        const languageOptions = document.querySelectorAll('.language-option');

        if (!languageToggle || !languageDropdown) {
            console.log('Language switcher elements not found');
            return;
        }

        // –¢–µ–∫—É—â–∏–π —è–∑—ã–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π)
        let currentLang = 'ru';

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
        languageToggle.addEventListener('click', (e) => {
            e.stopPropagation();
            languageDropdown.classList.toggle('show');
            languageToggle.classList.toggle('active');
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –æ–ø—Ü–∏—è–º —è–∑—ã–∫–∞
        languageOptions.forEach(option => {
            option.addEventListener('click', (e) => {
                e.stopPropagation();
                const selectedLang = option.dataset.lang;
                
                if (selectedLang !== currentLang) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
                    currentLang = selectedLang;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
                    const flagIcon = languageToggle.querySelector('.flag-icon');
                    const langText = languageToggle.querySelector('.lang-text');
                    
                    if (selectedLang === 'ru') {
                        flagIcon.textContent = 'üá∑üá∫';
                        langText.textContent = 'RU';
                    } else if (selectedLang === 'en') {
                        flagIcon.textContent = 'üá∫üá∏';
                        langText.textContent = 'EN';
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é
                    languageOptions.forEach(opt => opt.classList.remove('selected'));
                    option.classList.add('selected');
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
                    languageDropdown.classList.remove('show');
                    languageToggle.classList.remove('active');
                    
                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
                    console.log('Language changed to:', selectedLang);
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
                    localStorage.setItem('selectedLanguage', selectedLang);
                } else {
                    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ—Ç –∂–µ —è–∑—ã–∫, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                    languageDropdown.classList.remove('show');
                    languageToggle.classList.remove('active');
                }
            });
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (e) => {
            if (!languageToggle.contains(e.target) && !languageDropdown.contains(e.target)) {
                languageDropdown.classList.remove('show');
                languageToggle.classList.remove('active');
            }
        });

        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
        const savedLang = localStorage.getItem('selectedLanguage');
        if (savedLang && (savedLang === 'ru' || savedLang === 'en')) {
            currentLang = savedLang;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            const flagIcon = languageToggle.querySelector('.flag-icon');
            const langText = languageToggle.querySelector('.lang-text');
            
            if (currentLang === 'ru') {
                flagIcon.textContent = 'üá∑üá∫';
                langText.textContent = 'RU';
            } else if (currentLang === 'en') {
                flagIcon.textContent = 'üá∫üá∏';
                langText.textContent = 'EN';
            }
            
            // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é
            languageOptions.forEach(opt => {
                opt.classList.remove('selected');
                if (opt.dataset.lang === currentLang) {
                    opt.classList.add('selected');
                }
            });
        }

        console.log('Language switcher initialized');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤
    initLanguageSwitcher();
});
